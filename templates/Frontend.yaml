AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  00HostedZone:
    Type: String
    Description: The DNS name of an existing Amazon Route 53 hosted zone (e.g. "mydomain.com")
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  01Subdomain:
    Type: String
    Description: The subdomain from which the site will be served ("subdomain" if we want the site to be hosted on "subdomain.mydomain.com")
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid subdomain.
  02AcmCertificateArn:
    Type: String
    Description: ARN of an ACM requested certificate (matching the HostedZone domain) for enabling SSL on the distribution.
  03RedirectToHTTPS:
    Type: String
    Description: Set Viewer Protocol Policy of the CDN to redirect HTTP to HTTPS.
    AllowedValues: [true, false]
    Default: true

Conditions:
  ShouldRedirectToHTTPS: 
    !Equals [true, !Ref 03RedirectToHTTPS]

Mappings:
  Region2S3WebsiteSuffix:
    us-east-1:
      Suffix: .s3-website-us-east-1.amazonaws.com
    us-west-1:
      Suffix: .s3-website-us-west-1.amazonaws.com
    us-west-2:
      Suffix: .s3-website-us-west-2.amazonaws.com
    eu-west-1:
      Suffix: .s3-website-eu-west-1.amazonaws.com
    ap-northeast-1:
      Suffix: .s3-website-ap-northeast-1.amazonaws.com
    ap-northeast-2:
      Suffix: .s3-website-ap-northeast-2.amazonaws.com
    ap-southeast-1:
      Suffix: .s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      Suffix: .s3-website-ap-southeast-2.amazonaws.com
    ap-south-1:
      Suffix: .s3-website-ap-south-1.amazonaws.com
    us-east-2:
      Suffix: .s3-website-us-east-2.amazonaws.com
    sa-east-1:
      Suffix: .s3-website-sa-east-1.amazonaws.com
    cn-north-1:
      Suffix: .s3-website.cn-north-1.amazonaws.com.cn
    eu-central-1:
      Suffix: .s3-website.eu-central-1.amazonaws.com
Resources:
  S3BucketForWebsiteContent:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['.', [!Ref '01Subdomain', !Ref '00HostedZone']]
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
  WebsiteCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for S3-backed website
        Aliases:
        - !Join ['.', [!Ref '01Subdomain', !Ref '00HostedZone']]
        ViewerCertificate:
          AcmCertificateArn: !Ref 02AcmCertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Enabled: 'true'
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: 'true'
          TargetOriginId: only-origin
          ViewerProtocolPolicy: !If [ShouldRedirectToHTTPS, redirect-to-https, allow-all]
        DefaultRootObject: index.html
        Origins:
        - CustomOriginConfig:
            HTTPSPort: '443'
            OriginProtocolPolicy: http-only
          DomainName: !Join ['', [!Ref 'S3BucketForWebsiteContent', !FindInMap [Region2S3WebsiteSuffix,
                !Ref 'AWS::Region', Suffix]]]
          Id: only-origin
        CustomErrorResponses:
        - ErrorCode: 404
          ErrorCachingMinTTL: 10
          ResponsePagePath: /index.html
          ResponseCode: 200
  WebsiteDNSName:
    Type: AWS::Route53::RecordSet
    Properties:
      Type: A
      Name: !Join ['.', [!Ref '01Subdomain', !Ref '00HostedZone']]
      HostedZoneName: !Join ['', [!Ref '00HostedZone', .]]
      AliasTarget: 
        HostedZoneId: Z2FDTNDATAQYW2 # This is always the hosted zone ID when you create an alias record that routes traffic to a CloudFront distribution.
        DNSName: !GetAtt WebsiteCDN.DomainName
        EvaluateTargetHealth: false
Outputs:
  WebsiteURL:
    Value: !Join ['', ['https://', !Ref 'WebsiteDNSName']]
    Description: The URL of the newly created website
  BucketName:
    Value: !Ref 'S3BucketForWebsiteContent'
    Description: Name of S3 bucket to hold website content
