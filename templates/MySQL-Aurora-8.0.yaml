Transform: AWS::SecretsManager-2020-07-23
Description: "MySQL 5.7, using db-m4-large. It adds a BastionBox for connection. The Pair-Key must be created manually and downloaded"
Parameters:

  00EnvType:
    Description: "Environment for the build - QA or PROD"
    Default: QA
    Type: String
    AllowedValues:
      - PROD
      - PREPROD
      - QA

  01DBInstanceName:
    Description: "Name of the instance of RDS to be created"
    Type: String

  02DBName:
    Description: "Name of the database inside the instance"
    Type: String

  03VPC:
    Description: "VPC for the DB"
    Type: AWS::EC2::VPC::Id

  04Subnet1ForDB:
    Description: "Primary Subnet for the DB - Recommended a Private Subnet for security measures"
    Type: AWS::EC2::Subnet::Id

  05Subnet1AvailabilityZone:
    Description: "The AZ for the Subnet - Check on VPC tab to select the same AZ"
    Type: AWS::EC2::AvailabilityZone::Name

  06Subnet2ForDB:
    Description: "Primary Subnet for the DB - Recommended a Private Subnet for security measures"
    Type: AWS::EC2::Subnet::Id

  07Subnet2AvailabilityZone:
    Description: "The AZ for the Subnet - Check on VPC tab to select the same AZ"
    Type: AWS::EC2::AvailabilityZone::Name

  08SubnetForBB:
    Description: "Subnet for the BastionBox - Use a public subnet"
    Type: AWS::EC2::Subnet::Id

  09EncryptionKey:
    Description: "Key to be used for encryption on DB - Must be created in KMS"
    Type: String

  10EC2KeyPair:
    Description: "Key to connect with SSH to EC2 - KeyPair must be created beforehand in EC2"
    Type: String

  11EC2AMI:
    Description: "Type of AMI to run on the EC2 BastionBox. By default, an Ubuntu 24.04 will be used"
    Type: String
    Default: ami-0731becbf832f281e

  12EC2InstanceType:
    Description: "Instance type of the EC2 BastionBox. By default, an t3.micro will be used"
    Type: String
    Default: t3.micro

  13DBInstanceType:
    Description: "Instance type of the RDS instance in the cluster. By default, a db.r6i.large will be used"
    Type: String
    Default: db.r6i.large

Resources:

  InstanceBBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Bastion Box
      GroupName: !Sub ${00EnvType}-BastionBox
      VpcId: !Ref 03VPC

  BastionBox:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 11EC2AMI
      InstanceType: !Ref 12EC2InstanceType
      KeyName: !Ref 10EC2KeyPair
      SubnetId: !Ref 08SubnetForBB
      SecurityGroupIds:
        - !Ref InstanceBBSecurityGroup
      Tags:
        - Key: "Name"
          Value: !Sub ${00EnvType}-BastionBox

  InstanceDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SecurityGroup for Database
      GroupName: !Sub ${00EnvType}-DB
      VpcId: !Ref 03VPC

  InstanceDBSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref InstanceDBSecurityGroup
      IpProtocol: tcp
      ToPort: 3306
      FromPort: 3306
      SourceSecurityGroupId: !Ref InstanceBBSecurityGroup
      Description: BastionBox Connection

  MyRDSInstanceRotationSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: 'Secret for DB'
      KmsKeyId: !Ref 09EncryptionKey
      Name: !Sub ${00EnvType}-RDS-Secrets-2
      GenerateSecretString:
        SecretStringTemplate: '{"username": "administrator"}'
        GenerateStringKey: 'password'
        PasswordLength: 30
        ExcludeCharacters: '"@/\'

  MyDBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      AvailabilityZones:
        - !Ref 05Subnet1AvailabilityZone
        - !Ref 07Subnet2AvailabilityZone
      BackupRetentionPeriod: 7
      DatabaseName: !Ref 02DBName
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      Engine: aurora-mysql
      # Use lastest version of Aurora MySQL
      EngineVersion: !Ref "AWS::NoValue"
      KmsKeyId: !Ref 09EncryptionKey
      MasterUsername: !Sub '{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${MyRDSInstanceRotationSecret}::password}}'
      Port: 3306
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - !Ref InstanceDBSecurityGroup


  MyDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref MyDBCluster
      DBInstanceClass: !Ref 13DBInstanceType
      DBInstanceIdentifier: !Ref 01DBInstanceName
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      EnablePerformanceInsights: true
      Engine: aurora-mysql
      # Use lastest version of Aurora MySQL
      EngineVersion: !Ref "AWS::NoValue"
      PubliclyAccessible: false
      StorageEncrypted: true

  #Database subnet group for the RDS instance
  MyDBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: "Subnet Groups"
      SubnetIds:
        - Ref: 04Subnet1ForDB
        - Ref: 06Subnet2ForDB

